1. 
	ptr++		;// o index do ponteiro será incrementado.  
	(*ptr)++	;//	o valor do ponteiro será incrementado. 
	*(ptr		;// usa o valor atual do ponteiro e depois incrementa o index.
	*(ptr+10)	;// usa o valor atual do ponteiro e depois incrementa o index em dez posições

===================================================================================================

2.

int main() {
    //VARIABLES DECLARATING
    int y, *p, x;
    
    y = 0;		// y recebe o valor 0
    
    p = &y;		// p 'aponta' para o endereço de y, sendo assim, qualquer mudaça em y será refletirá em p e vice-versa.
    
    x = *p;		// x recebe o valor de p , x recebe 0
    
    x = 4;		// x recebe 4
    
    (*p)++;		// o valor de p é incrementado em uma unidade de int, p recebe 1
    
    x--;		// o valor de x é decrementado em uma unidade de int, x recebe 3
    
    (*p) += x;	// o valor de p é somado ao valor de x, p recebe 1 + 3 = 4
    
    printf ("y = %d\n", y); // printa o valor de y, mesmo valor de p, que é 4
    
    return 0;
}

===================================================================================================

3.

#include <stdio.h>
#include <stdlib.h>


void hm(int min, int *h,int *m){

    if(0<=min&&min<60){				// se min for menor que 60, h=0 e m=min
        *h=0;
        *m=min;
    }
    else if(60<=min){				// caso contrario h=min/60 e m=min-h*60
        *h = min/60;
        *m = min - (*h)*60;
    }

}

int main() {

    int min = 71; 					// caso teste 1h11min 
    int h,m=0;

    hm(min,&h,&m);					// passando min e endereço de h/m pela função 'hm'

    printf("%d min = %dh e %dm\n",min,h,m);	// printando o valor '71 min = 1h e 11m'

    return 0;
}

===================================================================================================

4.
//FUNÇÃO PARA CONCATENAR DUAS STRINGS
char* concat(char *str1,char *str2){

    int aux = 0;			//contador para armazenar o numero de indexes no array

    while(*str1!='\n'){		//enquanto o valor do array for diferente de '\n' incremente o index
        str1++;				//incrementa o index
        aux++;				//incrementa o contador
    }

    while(*str2!='\n'){		//enquanto o valor do array for diferente de '\n' incremente o index
        *str1=*str2;		//passa o valor do segundo array para o primeiro
        str1++;				//incrementa o index do primeiro array
        str2++;				//incrementa o index do segundo array
        aux++;				//incrementa o contador
    }
    *str1='\0';				//adiciona 'final da linha' no array

    str1=str1-aux;			//volta o index do array para o primeiro valor

    return str1;			//retorna o endereço array
}

===================================================================================================

5.
#include <stdio.h>
#include <stdlib.h>

int f0(int a,int b){return (a + b);}

int f1(int a,int b){return (a - b);}

int f2(int a,int b){return (a * b);}

int f3(int a,int b){return (a / b);}

int(*f[4])(int,int)={f0,f1,f2,f3};

int main() {

    int index=0;
    int result = 0;
    int a=1;
    int b=2;

    if(index==0&&b==0){return EXIT_FAILURE;}

    result =(*f[index])(a,b);

    printf("o index %d retornou %d",index,result);

    return 0;
}
